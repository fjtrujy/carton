name: Build and test

on:
  push:
  pull_request:
    branches: "*"

jobs:
  swift-test:
    strategy:
      matrix:
        include:
          - os: macos-11
            swift_version: 5.4
            xcode: /Applications/Xcode_12.5.1.app/Contents/Developer
          - os: macos-11
            swift_version: 5.5
            xcode: /Applications/Xcode_13.1.app/Contents/Developer
          - os: ubuntu-18.04
            swift_version: 5.5
          - os: ubuntu-20.04
            swift_version: 5.5
    name: Build on ${{ matrix.os }} with Swift ${{ matrix.swift_version }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Select Xcode version
        if: startsWith(matrix.os, 'macos')
        run: sudo xcode-select --switch ${{ matrix.xcode }}

      - name: Cleanup pre-installed SwiftLint
        run: rm -f '/usr/local/bin/swiftlint'

      - name: Install dependencies for macOS
        run: brew bundle
        if: startsWith(matrix.os, 'macos')

      - name: Install dependencies for Ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo ./install_ubuntu_deps.sh
          curl https://get.wasmer.io -sSfL | sh

      - name: Build the project
        run: swift build

      - name: Build and install JavaScript and sanitizer resources
        run: |
          set -ex
          npm install
          swift run carton-release hash-archive
          mkdir -p $HOME/.carton
          cp -r static $HOME/.carton

      - name: Run Tests
        run: |
          set -ex
          if [ -e /home/runner/.wasmer/wasmer.sh ]; then
            source /home/runner/.wasmer/wasmer.sh
          fi
          swift test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker_image:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Build a Docker image on Ubuntu 20.04
        run: docker build . -t gchr.io/swiftwasm/swiftwasm-action:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  docker-test:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:nightly